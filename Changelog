1. --> Write a LEXER:
		Detect only INTLIT, KEYWORDS, IDENTIFIERS, NEWLINE and WHITESPACES
	
		Keywords :
			INT


2. --> Writing a parser
			Parser detect only var decl of type int at present.

   --> Fixing some issue in lexer of not classify keywords as keywords

   --> Updating Lexer
   		Add functionailty to detect a assigment operator '='



3. -->in lexer.c : Replacing Unbuffered Input with Buffered one, in order to increasse efficency




3. --> Write a IRCode generator
	
   --> Updating Parser.c, Parser.h, Lexer.c

   		Parser.c:
   			. Change the return value of funtions from
   			TreeReturnNode* to ParseTree*

   			. substitute all strcmp() or strcpy() with
   			memcmp() and memcpy()

   		Parser.h
   			. Remove code-block for strcture TreeReturnNode

   		Lexer.c:
   			. Replace Unbuffered input with Buffered input

   			. substitute all strcmp() or strcpy() with
   			memcmp() and memcpy()


4. --> Successfully screwed branch IRGen >-<
	
   --> Improve lexer, parser, symboltable, IR-code genrator
   		Lexer:
   			* Fix putback-charcter funtion
   		Parser:
   			* Extend Funtionality to parse VAR_INITILISATION
   			* Updating each node of ParseTree with lineno and linepos
   		SymnolTable
   			* Update SymbolEntry with linepos, and lineno for better error-handling

   --> Add funtions for sematic analysis

   		* Symatic Analysis of Global_Var_Declaration


5. --> Extend parser for parsing a function
		
		* add tree TREE_FUNDECL
		
		* Upadte Lexer

			* ADD tokens ':', ',', ';', '(',  ')'
			* ADD keyword 'def', 'enddef', 'return'

		* Updare parser

			* extend ParseTree datastrcture with subnonterminalnode
				and subterminalnode for constructing better
				parse tree


		* Fix silly bugs

6. --> Update parser, lexer, semantic-analysis, ircodegen

   --> Fix a silly mistake, causing a semantic error when we declared a uninitilized variable inside a function